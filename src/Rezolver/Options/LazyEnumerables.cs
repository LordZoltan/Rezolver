// Copyright (c) Zolution Software Ltd. All rights reserved.
// Licensed under the MIT License, see LICENSE.txt in the solution root for license information

namespace Rezolver.Options
{
    /// <summary>
    /// Controls whether the enumerables which are automatically generated by the container, when the <see cref="Configuration.InjectEnumerables"/> configuration
    /// is used and enabled, are evaluated lazily or eagerly.
    /// </summary>
    /// <remarks>
    /// A lazily evaluated enumerable will generate new instances (if not otherwise controlled by singleton/scoped lifetimes) every time it is enumerated.
    ///
    /// Eagerly evaluted enumerables do not.</remarks>
    public class LazyEnumerables : ContainerOption<bool>
    {
        /// <summary>
        /// The default value for this option - equivalent to <c>true</c>
        /// </summary>
        public static LazyEnumerables Default { get; } = true;

        /// <summary>
        /// Convenience casting operator from <see cref="bool"/> to <see cref="LazyEnumerables"/> to simplify
        /// integration of the option type into logic statements.
        /// </summary>
        /// <param name="value"></param>
        public static implicit operator LazyEnumerables(bool value)
        {
            return new LazyEnumerables() { Value = value };
        }
    }
}
