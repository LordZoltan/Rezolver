# CI Build for Rezolver
# - Builds release and debug versions
# - Runs release unit tests
# - Packages Pre-Release versions for Devops and Nuget (Debug builds)
# - Packages Final versions for Devops and Nuget (Release builds)
# - Builds and packages documentation website

trigger:
- master

pool:
  vmImage: 'windows-latest' #vs2017-win2016 for docs

variables:
  solution: 'Rezolver.sln'
  docsProject: 'doc/Rezolver.Docs/Rezolver.Docs.csproj'
  buildPlatform: 'Any CPU'
  debugConfig: 'debug'
  releaseConfig: 'release'
  docsBuildConfig: 'Documentation'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build Debug'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(debugConfig)' 

- task: VSBuild@1
  displayName: 'Build Release'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(releaseConfig)'

- task: VSTest@2
  displayName: 'Run Tests (Release Build)'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(releaseConfig)'
    testAssemblyVer2: |
        **\Rezolver.Tests.dll
        **\Rezolver.Microsoft.DependencyInjection.Tests.dll
        **\Rezolver.Tests.Compilation.Expressions.dll
        **\Rezolver.Tests.Examples.dll
        !**\obj\**
    otherConsoleOptions: '/Framework:.NETCoreApp,Version=v2.2'

- task: DotNetCoreCLI@2
  displayName: 'Build Local Pre-release Packages'
  inputs:
    command: 'pack'
    searchPatternPack: '**\Rezolver\Rezolver.csproj;**\Rezolver.Microsoft.Extensions.DependencyInjection.csproj;**\Rezolver.Microsoft.AspNetCore.Hosting.csproj;**\Rezolver.Microsoft.Extensions.Hosting.csproj'
    configurationToPack: '$(debugConfig)'
    nobuild: true
    buildProperties: 'VersionSuffix="CI-$(Build.BuildNumber)"'
    packDirectory: '$(Build.artifactStagingDirectory)\nupkg\local-pre'

- task: DotNetCoreCLI@2
  displayName: 'Build Local Final Packages'
  inputs:
    command: 'pack'
    searchPatternPack: '**\Rezolver\Rezolver.csproj;**\Rezolver.Microsoft.Extensions.DependencyInjection.csproj;**\Rezolver.Microsoft.AspNetCore.Hosting.csproj;**\Rezolver.Microsoft.Extensions.Hosting.csproj'
    configurationToPack: '$(releaseConfig)'
    nobuild: true
    packDirectory: '$(Build.artifactStagingDirectory)\nupkg\local-final'

- task: DotNetCoreCLI@2
  displayName: 'Build Public PreRelease Packages'
  inputs:
    command: 'pack'
    searchPatternPack: '**\Rezolver\Rezolver.csproj;**\Rezolver.Microsoft.Extensions.DependencyInjection.csproj;**\Rezolver.Microsoft.AspNetCore.Hosting.csproj;**\Rezolver.Microsoft.Extensions.Hosting.csproj'
    configurationToPack: '$(debugConfig)'
    nobuild: true
    buildProperties: 'VersionSuffix="Beta-$(Build.BuildNumber)"'
    packDirectory: '$(Build.artifactStagingDirectory)\nupkg\pre'

- task: DotNetCoreCLI@2
  displayName: 'Build Public Final Packages'
  inputs:
    command: 'pack'
    searchPatternPack: '**\Rezolver\Rezolver.csproj;**\Rezolver.Microsoft.Extensions.DependencyInjection.csproj;**\Rezolver.Microsoft.AspNetCore.Hosting.csproj;**\Rezolver.Microsoft.Extensions.Hosting.csproj'
    configurationToPack: '$(releaseConfig)'
    nobuild: true
    packDirectory: '$(Build.artifactStagingDirectory)\nupkg\final'

- task: VSBuild@1
  displayName: 'Build documentation site'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(docsBuildConfig)'

- task: DotNetCoreCLI@2
  displayName: 'Zip Website'
  inputs:
    command: publish
    projects: '$(docsProject)'
    publishWebProjects: False
    arguments: '--configuration $(docsBuildConfig) --output $(Build.ArtifactStagingDirectory)\docs'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1